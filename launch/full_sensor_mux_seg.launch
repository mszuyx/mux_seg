<launch>

  <param name="/use_sim_time"        value="false"/>
  <arg name="use_imu_filter"         default="true"/>
  <arg name="raw_pointcloud_topic1"  default="/d455_r/depth/color/points"/>
  <arg name="raw_pointcloud_topic2"  default="/d455_l/depth/color/points"/>
  <arg name="right_frame_id"         default="d455_r_depth_optical_frame"/>
  <arg name="left_frame_id"          default="d455_l_depth_optical_frame"/>
  <arg name="camera_height"          default="1.0"/>
  <arg name="grid_unit_size"         default="0.15"/>
  <arg name="grid_length"            default="5.0"/>
  <arg name="grid_width"             default="5.0"/>
  <arg name="grid_height"            default="1.0"/>
  
  <!-- Launch realsense camera-->
  <include file="$(find realsense2_camera)/launch/rs_multiple_d455_pco_vertical.launch"/> 

  <!-- Launch range sensors -->
  <!--
  <include file="$(find teraranger)/launch/teraranger_mini_duo.launch"/>
  -->
  <include file="$(find ydlidar_ros_driver)/launch/X2_duo.launch"/>
  
  
  <!-- Define sensor placement -->  
  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_base_optical_link" args="0.0 0.0 0.0 0.5 -0.5 0.5 0.5 base_optical_link base_link" />1.72984688   1.67552-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_d455_l" args="0.37  0.22 -0.0533 -0.436332  -0.0698132 -1.64061 base_link d455_l_link" /> 
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_d455_r" args="0.36 -0.22  0.0117  0.436332    0.0174533  1.67552 base_link d455_r_link"/>
  
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_lidar_base_l" args="-0.155  0.24 -0.145 0.0 0.0 3.1415927  base_link lidar_base_1" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_lidar_base_r" args="-0.155 -0.24 -0.078 -0.0349066 0.0 3.1415927  base_link lidar_base_0" />

 <group if="$(arg use_imu_filter)">
  <!-- Launch the Complementary filter node -->
  <node pkg="imu_complementary_filter" type="complementary_filter_node" name="complementary_filter_gain_node" output="screen">
    <remap from="input_raw_imu"                                  to = "/d455_r/imu" />
    <param name="do_bias_estimation"        type = "bool"        value = "true"/>
    <param name="do_adaptive_gain"          type = "bool"        value = "true"/>
    <param name="use_mag"                   type = "bool"        value = "false"/>
    <param name="gain_acc"                  type = "double"      value = "0.01"/>
    <param name="gain_mag"                  type = "double"      value = "0.01"/>
  </node>
 </group>

  <node pkg="imu_transformer" type="imu_transformer_node" name="imu_data_transformer" output="screen">
    <remap from="imu_in/data" to="/imu/data"/>
    <remap from="imu_out/data" to="/imu_transformed_base"/>
    <param name="target_frame" value="base_link"/>
  </node>

  <!-- Launch the mux_seg range only node -->
  <node pkg="mux_seg" type="mux_seg" name="mux_seg" output="screen">
    <remap from="/camera_in_right"                                 to = "$(arg raw_pointcloud_topic1)" />
    <remap from="/camera_in_left"                                  to = "$(arg raw_pointcloud_topic2)" />
    <remap from="/range_in_right"                                  to = "/evo_mini_0/pointcloud" />
    <remap from="/range_in_left"                                   to = "/evo_mini_1/pointcloud" />
    <remap from="/lidar_in_right"                                  to = "/ydlidar_0/point_cloud" />
    <remap from="/lidar_in_left"                                   to = "/ydlidar_1/point_cloud" />
    <remap from="/imu_data"                                        to = "/imu_transformed_base" />
    
    <param name="base_frame_id"             type = "string"      value = "base_link" />
    <param name="right_camera_frame_id"     type = "string"      value = "$(arg right_frame_id)" />
    <param name="left_camera_frame_id"      type = "string"      value = "$(arg left_frame_id)" />
    <param name="right_range_frame_id"      type = "string"      value = "base_range_0" />
    <param name="left_range_frame_id"       type = "string"      value = "base_range_1" />
    <param name="right_lidar_frame_id"      type = "string"      value = "laser_frame_0" />
    <param name="left_lidar_frame_id"       type = "string"      value = "laser_frame_1" />
    
    <param name="dead_zone_"                type = "double"      value = "0.24"/> <!--0.24-->
    <param name="th_ceil_"                  type = "double"      value = "$(arg grid_height)"/>
    <param name="th_box_"                   type = "double"      value = "$(arg grid_length)"/>
    <param name="map_unit_size_"            type = "double"      value = "$(arg grid_unit_size)"/>
    <param name="compress_z"                type = "bool"        value = "false"/>
   
    <param name="sensor_height"             type = "double"      value = "$(arg camera_height)"/>
    <param name="num_iter"                  type = "int"         value = "5"/>
    <param name="num_lpr"                   type = "double"      value = "0.7"/>
    <param name="th_seeds"                  type = "double"      value = "0.05"/>
    <param name="th_dist"                   type = "double"      value = "0.05"/>
    <param name="block_thres_"              type = "double"      value = "0.3"/>
    <param name="radius_search_"            type = "double"      value = "0.5"/> 
    <param name="in_radius_"                type = "int"         value = "50"/> 
    <param name="SVD_refinement"            type = "bool"        value = "true"/>
    <param name="detect_neg_obstacle"       type = "bool"        value = "false"/>
    <param name="debug"                     type = "bool"        value = "false"/>
    <param name="timer"                     type = "bool"        value = "true"/>
  </node>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- Launch the pointcloud to laser node -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">
    <remap from="cloud_in"                                       to = "/range_points" />
    <remap from="scan"                                           to = "/comb_scan" />
      <rosparam>
      target_frame: base_link
      transform_tolerance: 0.01
      min_height: -1.0
      max_height: 2.0
        
      angle_min: -3.1415926
      angle_max: 3.1415926
      angle_increment: 0.01745329251
      scan_time: 0.025
      range_min: 0.0
      range_max: 7.0
      use_inf: true
        
      #concurrency_level affects number of pc queued for processing and the number of threadsused
      # 0: Detect number of cores
      # 1: Single threaded
      # 2: inf : Parallelism level
      concurrency_level: 0
    </rosparam>
  </node>
</launch>
